version: '3.8'

services:
  # FastAPI Application
  app:
    build: .
    container_name: aiops-api
    ports:
      - "8000:8000"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENSEARCH_HOST=opensearch
      - PROMETHEUS_HOST=prometheus
      - REDIS_URL=redis://redis:6379
    depends_on:
      opensearch:
        condition: service_healthy
      prometheus:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - aiops-network
    volumes:
      - ./app:/app/app
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # OpenSearch
  opensearch:
    image: opensearchproject/opensearch:2.11.0
    container_name: aiops-opensearch
    environment:
      - discovery.type=single-node
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - DISABLE_SECURITY_PLUGIN=true
    ports:
      - "9200:9200"
      - "9600:9600"
    networks:
      - aiops-network
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # OpenSearch Dashboards
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.0
    container_name: aiops-opensearch-dashboards
    ports:
      - "5601:5601"
    environment:
      - OPENSEARCH_HOSTS=http://opensearch:9200
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    depends_on:
      opensearch:
        condition: service_healthy
    networks:
      - aiops-network
    restart: on-failure

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: aiops-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - aiops-network
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: aiops-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./configs/grafana/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      prometheus:
        condition: service_healthy
    networks:
      - aiops-network
    restart: on-failure

  # Jaeger 分散式追蹤
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"     # Zipkin/Thrift compact
      - "6831:6831/udp"     # Thrift compact
      - "6832:6832/udp"     # Thrift binary
      - "5778:5778"         # Serving configs
      - "16686:16686"       # Jaeger UI
      - "14268:14268"       # Thrift over HTTP
      - "14250:14250"       # gRPC
      - "9411:9411"         # Zipkin compatible endpoint
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - aiops-network
    restart: on-failure

  # Redis for LangGraph state persistence
  redis:
    image: redis:7-alpine
    container_name: aiops-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - aiops-network
    restart: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Node Exporter
  node-exporter:
    image: prom/node-exporter:latest
    container_name: aiops-node-exporter
    ports:
      - "9100:9100"
    networks:
      - aiops-network
    restart: on-failure

networks:
  aiops-network:
    driver: bridge

volumes:
  opensearch-data:
  prometheus-data:
  grafana-data:
  redis-data: